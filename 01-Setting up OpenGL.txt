#include <stdio.h>

#include <GL/glew.h>
#include <GLFW/glfw3.h>

//WINDOW DIMENSIONS
const GLint WIDTH = 800, HEIGHT = 600;

int main()
{
	//initialise GLFW
	if (!glfwInit())
	{
		printf("GFLW initialization failed");
		glfwTerminate();
		return 1;
	}

	//Setup GLFW window properties
	//OpenGL Version
	glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
	glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
	//Core profile = No backward compatibility
	glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
	//Allow Forward compatibility
	glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);

	GLFWwindow* mainWIndow = glfwCreateWindow(WIDTH, HEIGHT, "Test Window", NULL, NULL);
	if (!mainWIndow)
	{
		printf("GLFW window creation failed");
		glfwTerminate();
		return 1;
	}

	//Get buffer size information
	int bufferWidth, bufferHeight;
	glfwGetFramebufferSize(mainWIndow, &bufferWidth, &bufferHeight);
	
	//Set the context for GLEW to use
	glfwMakeContextCurrent(mainWIndow);

	//Allow modern extension features
	glewExperimental = GL_TRUE;

	if (glewInit() != GLEW_OK)
	{
		printf("GLEW initialisation failed");
		glfwDestroyWindow(mainWIndow);
		glfwTerminate();
		return 1;
	}

	//Setup Viewport Size
	glViewport(0, 0, bufferWidth, bufferHeight);

	//Loop until window closed
	while (!glfwWindowShouldClose(mainWIndow))
	{
		//Get + Handle user input events
		glfwPollEvents();

		//Clear Window
		glClearColor(0.5f, 0.2f, 0.9f, 1.0f);
		glClear(GL_COLOR_BUFFER_BIT);

		//There are 2 buffers, one can be seen and one can be drawn on. 
		//By swapping, the drawn scene becomes visible
		glfwSwapBuffers(mainWIndow);	
	}

	return 0;
}